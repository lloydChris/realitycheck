version: 2

resource_job_defaults: &resource_job_defaults
  docker:  [{image: 'circleci/ruby:2.4.1'}]
  steps:
    - run:
        name: verify required Environment Variables
        command: |
          if [ -z "${CIRCLE_HOSTNAME}" -o -z "${CIRCLE_TOKEN}" ];then
            echo "You must provide 2 Environment Variables in project settings for this job to run."
            echo "CIRCLE_HOSTNAME: Should be the scheme://domain of your install. \"https://ci.example.com\""
            echo "CIRCLE_TOKEN: Should be the API Key of an admin or project level with Scope:All"
            exit 1
          fi
    - run:
        name: verify that job ran with the requested resource_class option
        command: |
          curl -k \
          "${CIRCLE_HOSTNAME%/}/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM?\
          circle-token=$CIRCLE_TOKEN"
#          jq '.picard.resource_class.class'

jobs:
  # resource class jobs
  small: # 1 vCPU, 2GB RAM
    <<: *resource_job_defaults
    resource_class: small

  medium: # 2 vCPUs, 4GB RAM
    <<: *resource_job_defaults
    resource_class: medium

  medium+: # 3 vCPUs, 6GB RAM
    <<: *resource_job_defaults
    resource_class: medium+

  large: # 4 vCPUs, 8GB RAM
    <<: *resource_job_defaults
    resource_class: large

  xlarge: # 8 vCPUs, 16GB RAM
    <<: *resource_job_defaults
    resource_class: xlarge

workflows:
  version: 2
  resource_class_jobs:
    jobs:
      - small
      - medium
      - medium+
      - large
      - xlarge

