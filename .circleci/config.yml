version: 2

resource_job_defaults: &resource_job_defaults
  docker:  [{image: 'circleci/ruby:2.4.1'}]
  steps:
    - run:
        name: verify required Environment Variables
        command: |
          if [ -z "${CIRCLE_HOSTNAME}" -o -z "${CIRCLE_TOKEN}" ];then
            echo "You must provide 2 Environment Variables in project settings for this job to run."
            echo "CIRCLE_HOSTNAME: Should be the scheme://domain of your install. \"https://ci.example.com\""
            echo "CIRCLE_TOKEN: Should be the API Key of an admin or project level with Scope:All"
            exit 1
          fi
    - run:
        name: verify that job ran with the requested resource_class option
        command: |
          curl -k \
          "${CIRCLE_HOSTNAME%/}/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM?\
          circle-token=$CIRCLE_TOKEN" | \
          jq '.picard.resource_class.class' | grep $CIRCLE_JOB

remote_docker_defaults: &remote_docker_defaults
  docker: [{image: 'docker:17.06-git'}]

basic_docker_build: &basic_docker_build
  name: "Build a really basic docker image"
  command: |
    dockerfile=Dockerfile
    echo "FROM alpine:latest" > $dockerfile
    echo "RUN echo hello" >> $dockerfile
    docker build -f $dockerfile --tag throwaway:$CIRCLE_BUILD_NUM .
    docker run --rm throwaway:$CIRCLE_BUILD_NUM

contexts_defaults: &contexts_defaults
  docker: [{image: 'alpine:latest'}]
  working_directory: /a/contexts/test

workspaces_defaults: &workspaces_defaults
  docker: [{image: 'circleci/node:latest'}]
  working_directory: ~/foo/bar

jobs:
  # vm jobs
  build:
    machine: true
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 8
